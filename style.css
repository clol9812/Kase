// Дополняем объект Case
const cases = [
    {
        id: 1,
        name: "Обычный кейс",
        price: 100,
        image: "./images/case1.png",
        items: [
            // Добавляем поле animationImage для анимации
            { name: "Пистолет", price: 50, rare: 1, 
              image: "./images/pistol.png", 
              animationImage: "./images/pistol_spin.gif" },
            // ... остальные предметы
        ]
    },
    // ... остальные кейсы
];

let isSpinning = false;
let spinTimeout;

async function openCase(caseId) {
    if (isSpinning) return;
    
    const selectedCase = cases.find(c => c.id === caseId);
    if (!selectedCase || balance < selectedCase.price) {
        showError("Недостаточно средств!");
        return;
    }

    isSpinning = true;
    balance -= selectedCase.price;
    updateBalance();

    // Случайный предмет
    const items = selectedCase.items;
    const targetIndex = Math.floor(Math.random() * items.length);
    const targetItem = items[targetIndex];

    // Запуск анимации
    await startSlotAnimation(items, targetIndex);
    
    // Показ результата
    showResult(targetItem);
    
    // Добавление в инвентарь
    inventory.push(targetItem);
    updateInventory();
    isSpinning = false;
}

async function startSlotAnimation(items, targetIndex) {
    const slot = document.getElementById('slotItems');
    slot.innerHTML = '';
    
    // Создаем 20 клонов предметов для эффекта бесконечного вращения
    const spinItems = [...items, ...items, ...items, ...items, ...items];
    
    spinItems.forEach((item, index) => {
        const div = document.createElement('div');
        div.className = 'slot-item';
        div.innerHTML = `
            <img src="${item.animationImage || item.image}" 
                 alt="${item.name}"
                 class="${index === targetIndex ? 'target-item' : ''}">
        `;
        slot.appendChild(div);
    });

    // Начало анимации
    slot.style.transition = 'none';
    slot.style.transform = 'translateY(0)';
    
    await new Promise(resolve => setTimeout(resolve, 50));
    
    // Запуск вращения
    slot.style.transition = 'transform 3s cubic-bezier(0.25, 0.1, 0.25, 1)';
    slot.style.transform = `translateY(-${(targetIndex + spinItems.length * 2) * 200}px)`;
    
    // Вибрация (для мобильных)
    if (navigator.vibrate) navigator.vibrate([200, 100, 200]);
    
    return new Promise(resolve => {
        slot.ontransitionend = () => resolve();
    });
}

function showResult(item) {
    const slot = document.getElementById('slotItems');
    slot.innerHTML = `
        <div class="slot-item">
            <img src="${item.image}" 
                 alt="${item.name}"
                 class="winning-animation"
                 style="transform: scale(1.2)">
        </div>
    `;
    
    // Эффект конфетти
    for(let i = 0; i < 50; i++) {
        createConfetti();
    }
    
    // Всплывающее уведомление
    const notification = document.createElement('div');
    notification.className = 'win-notification';
    notification.innerHTML = `
        🎉 ${item.name} ($${item.price}) 🎉
    `;
    document.body.appendChild(notification);
    
    setTimeout(() => notification.remove(), 3000);
}

// Эффект конфетти
function createConfetti() {
    const confetti = document.createElement('div');
    confetti.className = 'confetti';
    confetti.style.left = Math.random() * 100 + '%';
    confetti.style.backgroundColor = `hsl(${Math.random() * 360}, 100%, 50%)`;
    document.body.appendChild(confetti);
    
    setTimeout(() => confetti.remove(), 3000);
        }
